{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM's name prefix"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_DS2_v2",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of VMs to create"
      }
    },
    "instanceIndex": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The VM's starting index.  e.g. instanceIndex = 1 - testvm01  e.g. instanceIndex = 4 - testvm04"
      }
    },
    "imageObject": {
      "type": "object",
      "defaultValue": {
        "imageSku": "2019-Datacenter",
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "version": "Latest"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The vnet's resource group name"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the vnet to attach the VM's Nic to'"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The vnet's subnet name"
      }
    },
    "dataDiskObject": {
      "type": "array",
      "metadata": {
        "description": "Array of data disk objects"
      },
      "defaultValue": [
        {
          "diskSizeGB": 32,
          "caching": "ReadWrite"
        },
        {
          "diskSizeGB": 32,
          "caching": "ReadWrite"
        }
      ]
    },
    "availabilityZone": {
      "type": "string",
      "defaultValue": "2"
    }
  },
  "variables": {
    "apiVersions": {
      "compute": "2019-07-01",
      "network": "2019-11-01"
    },
    "prefixes": {
      "pubIp": "pip-",
      "nic": "nic-",
      "ipConfig": "ipConfig-",
      "osDisk": "-osDisk",
      "dataDisk": "-dataDisk"
    },
    "vnetResourceId": "[resourceid(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnetResourceId": "[concat(variables('vnetResourceId'), '/subnets/', parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('prefixes').pubIp, parameters('vmName'), copyindex(parameters('instanceIndex')))]",
      "apiVersion": "[variables('apiVersions').network]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "pubipLoop",
        "count": "[parameters('instanceCount')]"
      },
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(variables('prefixes').nic, parameters('vmName'), copyindex(parameters('instanceIndex')))]",
      "apiVersion": "[variables('apiVersions').network]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('instanceCount')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('prefixes').pubIp, parameters('vmName'), copyindex(parameters('instanceIndex'))))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(variables('prefixes').ipConfig, parameters('vmName'), copyindex(parameters('instanceIndex')))]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('prefixes').pubIp, parameters('vmName'), copyindex(parameters('instanceIndex'))))]"
              },
              "subnet": {
                "id": "[variables('subnetResourceId')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
      "apiVersion": "[variables('apiVersions').compute]",
      "location": "[resourceGroup().location]",
      "condition": "[not(equals(parameters('availabilityZone'), json('null')))]",
      "copy": {
        "count": "[parameters('instanceCount')]",
        "name": "vmLoop"
      },
      "dependsOn": [
        "nicLoop"
      ],
      "zones":[
          "[parameters('availabilityZone')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imageObject').imagePublisher]",
            "offer": "[parameters('imageObject').imageOffer]",
            "sku": "[parameters('imageObject').imageSku]",
            "version": "[parameters('imageObject').version]"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), variables('prefixes').osDisk)]",
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "Premium_LRS"
            }
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(parameters('dataDiskObject'))]",
              "input": {
                "caching": "[parameters('dataDiskObject')[copyIndex('dataDisks')].caching]",
                "diskSizeGB": "[parameters('dataDiskObject')[copyIndex('dataDisks')].diskSizeGB]",
                "lun": "[copyIndex('dataDisks')]",
                "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), variables('prefixes').dataDisk, copyindex('dataDisks'))]",
                "createOption": "Empty",
                "managedDisk": {
                  "storageAccountType": "Premium_LRS"
                }
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('prefixes').nic, parameters('vmName'), copyindex(parameters('instanceIndex'))))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": [
      ]
    }
  ]
}
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "2016-Datacenter",
            "metadata": {
                "description": "The image sku"
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftWindowsServer",
            "metadata": {
                "description": "The image publisher"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "metadata": {
                "description": "The image offer"
            }
        },
        "vmSize": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "Standard_DS1_v2",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "The VM's name prefix"
            }
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of VMs to create"
            }
        },
        "instanceIndex": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The VM's starting index.  e.g. instanceIndex = 1 - testvm01  e.g. instanceIndex = 4 - testvm04"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The vnet's resource group name"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the vnet to attach the VM's Nic to'"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "The vnet's subnet name"
            }
        },
        "dataDiskObject": {
            "type": "array",
            "metadata": {
                "description": "Array of data disk objects"
            },
            "defaultValue": [
                {
                    "diskSizeGB": 32,
                    "caching": "ReadWrite"
                },
                {
                    "diskSizeGB": 32,
                    "caching": "ReadWrite"
                }
            ]
        },
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the load balancer"
            }
        },
        "loadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "The internal load balancer's IP address"
            }
        },
        "wsfcIP": {
            "type": "string",
            "metadata": {
                "description": "The windows server failover cluster's IP address"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the availability set containing the VMs"
            }
        },
        "cloudWitnessName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to be used as the witness"
            }
        },
        "domainFqdn": {
            "type": "string",
            "metadata": {
                "description": "The fully qualified domain name"
            }
        },
        "ouPath": {
            "type": "string",
            "metadata": {
                "description": "The OU to join the SQL servers to"
            }
        },
        "domainJoinUser": {
            "type": "string",
            "metadata": {
                "description": "The username of the account used to join the domain"
            }
        },
        "domainJoinPassword": {
            "type": "string",
            "metadata": {
                "description": "The password of the account used to join the domain"
            }
        },
        "automationAccountResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group containing the automation account"
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "The name of the automation account"
            }
        },
        "automationAccountRegistrationUrl": {
            "type": "string",
            "metadata": {
                "description": "The registration url of the automation account used for DSC onboarding"
            }
        },
        "nodeConfigurationName": {
            "type": "string",
            "metadata": {
                "description": "The name of the DSC node configuration to the VMs"
            }
        }
    },
    "variables": {
        "vnetId": "[resourceid(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('CloudWitnessName')]",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Premium_LRS"
            },
            "kind": "Storage",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2018-12-01",
            "name": "[parameters('loadBalancerName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAddress": "[parameters('loadbalancerIP')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    },
                    {
                        "name": "WindowsServerFailoverCluster",
                        "properties": {
                            "privateIPAddress": "[parameters('wsfcIP')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "SQL-HA"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "SQLAlwaysOnEndPointListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 1433,
                            "backendPort": 1433,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/SQL-HA')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/SQLAlwaysOnEndPointProbe')]"
                            }
                        }
                    },
                    {
                        "name": "WSFCEndPoint",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIPConfigurations/WindowsServerFailoverCluster')]"
                            },
                            "frontendPort": 58888,
                            "backendPort": 58888,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/SQL-HA')]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/WSFCEndPointProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "SQLAlwaysOnEndPointProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 59999,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "WSFCEndPointProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 58888,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-publicIP')]",
            "apiVersion": "2018-12-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "copy": {
                "name": "pubIpLoop",
                "count": "[parameters('instanceCount')]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-nic')]",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('instanceCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-ipConfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-publicIP'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/SQL-HA')]"
                                }
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "pubIpLoop",
                "[resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName'))]"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
            "apiVersion": "2018-10-01",
            "copy": {
                "count": "[parameters('instanceCount')]",
                "name": "vmLoop"
            },
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('availabilitySetName')))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-osDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[length(parameters('dataDiskObject'))]",
                            "input": {
                                "caching": "[parameters('dataDiskObject')[copyIndex('dataDisks')].caching]",
                                "diskSizeGB": "[parameters('dataDiskObject')[copyIndex('dataDisks')].diskSizeGB]",
                                "lun": "[copyIndex('dataDisks')]",
                                "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-dataDisk', copyindex('dataDisks'))]",
                                "createOption": "Empty"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            },
            "resources": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2016-03-30",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')),'/joindomain')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instanceCount')]",
                "name": "domainJoinLoop"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainFqdn')]",
                    "User": "[concat(parameters('domainFqdn'), '\\', parameters('domainJoinUser'))]",
                    "Restart": true,
                    "Options": "3",
                    "OUPath": "[parameters('ouPath')]"
                },
                "protectedSettings": {
                    "Password": "[parameters('domainJoinPassword')]"
                }
            },
            "dependsOn": [
                "vmLoop"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '/Microsoft.Powershell.DSC')]",
            "apiVersion": "2019-03-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instanceCount')]",
                "name": "dscLoop"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.77",
                "autoUpgradeMinorVersion": true,
                "protectedSettings": {
                    "Items": {
                        "registrationKeyPrivate": "[listKeys(resourceId(parameters('automationAccountResourceGroup'), 'Microsoft.Automation/automationAccounts/', parameters('automationAccountName')), '2018-06-30').Keys[0].value]"
                    }
                },
                "settings": {
                    "Properties": [
                        {
                            "Name": "RegistrationKey",
                            "Value": {
                                "UserName": "PLACEHOLDER_DONOTUSE",
                                "Password": "PrivateSettingsRef:registrationKeyPrivate"
                            },
                            "TypeName": "System.Management.Automation.PSCredential"
                        },
                        {
                            "Name": "RegistrationUrl",
                            "Value": "[parameters('automationAccountRegistrationUrl')]",
                            "TypeName": "System.String"
                        },
                        {
                            "Name": "NodeConfigurationName",
                            "Value": "[parameters('nodeConfigurationName')]",
                            "TypeName": "System.String"
                        }
                    ]
                }
            },
            "dependsOn": [
                "domainJoinLoop"
            ]
        }
    ]
}
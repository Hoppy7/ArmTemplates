{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "imageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "metadata": {
        "description": "The image sku"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "The image publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "The image offer"
      }
    },
    "vmSize": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "Standard_DS1_v2",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "vmName": {
      "type": "string",
      "metadata": {
        "description": "The VM's name prefix"
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The number of VMs to create"
      }
    },
    "instanceIndex": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The VM's starting index.  e.g. instanceIndex = 1 - testvm01  e.g. instanceIndex = 4 - testvm04"
      }
    },
    "availabilitySetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the availability set to add the VMs to"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "metadata": {
        "description": "The vnet's resource group name"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the vnet to attach the VM's Nic to'"
      }
    },
    "subnetName": {
      "type": "string",
      "metadata": {
        "description": "The vnet's subnet name"
      }
    },
    "dataDiskObject": {
      "type": "array",
      "metadata": {
        "description": "Array of data disk objects"
      },
      "defaultValue": [
        {
          "diskSizeGB": 32,
          "caching": "ReadWrite"
        },
        {
          "diskSizeGB": 32,
          "caching": "ReadWrite"
        }
      ]
    }
  },
  "variables": {
    "vnetId": "[resourceid(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "apiVersion": "2016-04-30-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "platformFaultDomainCount": 2,
        "platformUpdateDomainCount": 2,
        "managed": true
      }
    },
    {
      "apiVersion": "2018-11-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-nic')]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('instanceCount')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-ipConfig')]",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2018-10-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
      "copy": {
        "count": "[parameters('instanceCount')]",
        "name": "vmLoop"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "nicLoop",
        "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSku')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-osDisk')]",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "copy": [
            {
              "name": "dataDisks",
              "count": "[length(parameters('dataDiskObject'))]",
              "input": {
                "caching": "[parameters('dataDiskObject')[copyIndex('dataDisks')].caching]",
                "diskSizeGB": "[parameters('dataDiskObject')[copyIndex('dataDisks')].diskSizeGB]",
                "lun": "[copyIndex('dataDisks')]",
                "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-dataDisk', copyindex('dataDisks'))]",
                "createOption": "Empty"
              }
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-nic'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "resources": []
    }
  ]
}
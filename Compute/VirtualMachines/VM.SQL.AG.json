{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Admin password"
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "Enterprise",
            "metadata": {
                "description": "The image sku"
            }
        },
        "imagePublisher": {
            "type": "string",
            "defaultValue": "MicrosoftSQLServer",
            "metadata": {
                "description": "The image publisher"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "SQL2017-WS2016",
            "metadata": {
                "description": "The image offer"
            }
        },
        "vmSize": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "Standard_DS1_v2",
            "metadata": {
                "description": "The size of the VM"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "The VM's name prefix"
            }
        },
        "instanceCount": {
            "type": "int",
            "defaultValue": 2,
            "metadata": {
                "description": "The number of VMs to create"
            }
        },
        "instanceIndex": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The VM's starting index for the deployment.  E.g. instanceIndex = 1 - testvm01  e.g. instanceIndex = 4 - testvm04"
            }
        },
        "vnetResourceGroup": {
            "type": "string",
            "metadata": {
                "description": "The vnet's resource group name"
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the vnet to attach the VM's Nic to'"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "The vnet's subnet name"
            }
        },
        "dataDiskObject": {
            "type": "array",
            "metadata": {
                "description": "Array of data disk objects"
            },
            "defaultValue": [
                {
                    "diskSizeGB": 32,
                    "caching": "ReadWrite"
                },
                {
                    "diskSizeGB": 32,
                    "caching": "ReadWrite"
                }
            ]
        },
        "cloudWitnessName": {
            "type": "string",
            "metadata": {
                "description": "The name of the storage account to be used as the witness"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the availability set containing the VMs"
            }
        },
        "loadBalancerName": {
            "type": "string",
            "metadata": {
                "description": "The name of the load balancer"
            }
        },
        "loadBalancerIP": {
            "type": "string",
            "metadata": {
                "description": "The internal load balancer's IP address"
            }
        },
        "loadBalancerBackendPool": {
            "type": "string",
            "metadata": {
                "description": "The name of the load balancer's backend pool"
            }
        },
        "wsfcIP": {
            "type": "string",
            "metadata": {
                "description": "The windows server failover cluster's IP address"
            }
        },
        "failoverClusterName": {
            "type": "string",
            "metadata": {
                "description": "The name of the failover cluster"
            }
        },
        "domainFqdn": {
            "type": "string",
            "metadata": {
                "description": "The fully qualified domain name"
            }
        },
        "ouPath": {
            "type": "string",
            "metadata": {
                "description": "The OU to join the SQL servers to"
            }
        },
        "clusterBootstrapAccount": {
            "type": "string",
            "metadata": {
                "description": "The cluster bootstrap account username"
            }
        },
        "clusterBootstrapAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The cluster bootstrap account password"
            }
        },
        "clusterOperatorAccount": {
            "type": "string",
            "metadata": {
                "description": "The operator account username"
            }
        },
        "clusterOperatorAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The operator account password"
            }
        },
        "sqlServiceAccount": {
            "type": "string",
            "metadata": {
                "description": "The SQL service account username"
            }
        },
        "sqlServiceAccountPassword": {
            "type": "string",
            "metadata": {
                "description": "The SQL service account password"
            }
        },
        "sqlServerLicenseType": {
            "type": "string",
            "metadata": {
                "description": "The SQL server's connection type.  Allowed values: PAYG or AHUB"
            },
            "allowedValues": [
                "PAYG",
                "AHUB"
            ],
            "defaultValue": "PAYG"
        },
        "sqlConnectivityType": {
            "type": "string",
            "metadata": {
                "description": "The SQL server's connection type.  Allowed values: LOCAL, PRIVATE, PUBLIC"
            },
            "allowedValues": [
                "LOCAL",
                "PRIVATE",
                "PUBLIC"
            ],
            "defaultValue": "PRIVATE"
        },
        "sqlPort": {
            "type": "int",
            "metadata": {
                "description": "The SQL server's port"
            },
            "defaultValue": 1433
        },
        "sqlAuthUpdateUserName": {
            "type": "string",
            "metadata": {
                "description": "The SQL server's login"
            }
        },
        "sqlAuthUpdatePassword": {
            "type": "string",
            "metadata": {
                "description": "The SQL server's login passowrd"
            }
        },
        "sqlWorkloadType": {
            "type": "string",
            "metadata": {
                "description": "The SQL server's workload type.  Allowed values:  GENERAL, OLTP, DW"
            },
            "allowedValues": [
                "GENERAL",
                "OLTP",
                "DW"
            ],
            "defaultValue": "GENERAL"
        }
    },
    "variables": {
        "vnetId": "[resourceid(parameters('vnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('CloudWitnessName')]",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Premium_LRS"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-publicIP')]",
            "apiVersion": "2018-12-01",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "publicIPAddressVersion": "IPv4"
            },
            "copy": {
                "name": "pubIpLoop",
                "count": "[parameters('instanceCount')]"
            }
        },
        {
            "name": "[parameters('availabilitySetName')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "platformUpdateDomainCount": 2,
                "platformFaultDomainCount": 2
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/loadBalancers",
            "apiVersion": "2018-12-01",
            "name": "[parameters('loadBalancerName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard",
                "tier": "Regional"
            },
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "LoadBalancerFrontEnd",
                        "properties": {
                            "privateIPAddress": "[parameters('loadbalancerIP')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    },
                    {
                        "name": "WindowsServerFailoverCluster",
                        "properties": {
                            "privateIPAddress": "[parameters('wsfcIP')]",
                            "privateIPAllocationMethod": "Static",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[parameters('loadBalancerBackendPool')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "SQLAlwaysOnEndPointListener",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIPConfigurations/LoadBalancerFrontEnd')]"
                            },
                            "frontendPort": 1433,
                            "backendPort": 1433,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', parameters('loadBalancerBackendPool'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/SQLAlwaysOnEndPointProbe')]"
                            }
                        }
                    },
                    {
                        "name": "WSFCEndPoint",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIPConfigurations/WindowsServerFailoverCluster')]"
                            },
                            "frontendPort": 58888,
                            "backendPort": 58888,
                            "enableFloatingIP": true,
                            "idleTimeoutInMinutes": 4,
                            "protocol": "Tcp",
                            "enableTcpReset": false,
                            "loadDistribution": "Default",
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', parameters('loadBalancerBackendPool'))]"
                            },
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/WSFCEndPointProbe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "SQLAlwaysOnEndPointProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 59999,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    },
                    {
                        "name": "WSFCEndPointProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 58888,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ],
                "inboundNatRules": [],
                "inboundNatPools": []
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-nic')]",
            "apiVersion": "2018-11-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('instanceCount')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-ipConfig')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-publicIP'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/', parameters('loadBalancerBackendPool'))]"
                                }
                            ]
                        }
                    }
                ]
            },
            "dependsOn": [
                "pubIpLoop"
            ]
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instanceCount')]",
                "name": "vmLoop"
            },
            "dependsOn": [
                "nicLoop"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', concat(parameters('availabilitySetName')))]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[parameters('imagePublisher')]",
                        "offer": "[parameters('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-osDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "copy": [
                        {
                            "name": "dataDisks",
                            "count": "[length(parameters('dataDiskObject'))]",
                            "input": {
                                "caching": "[parameters('dataDiskObject')[copyIndex('dataDisks')].caching]",
                                "diskSizeGB": "[parameters('dataDiskObject')[copyIndex('dataDisks')].diskSizeGB]",
                                "lun": "[copyIndex('dataDisks')]",
                                "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-dataDisk', copyindex('dataDisks'))]",
                                "createOption": "Empty"
                            }
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmName'), copyindex(parameters('instanceIndex')), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                }
            },
            "resources": []
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2016-03-30",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')),'/joindomain')]",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instanceCount')]",
                "name": "domainJoinLoop"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "Name": "[parameters('domainFqdn')]",
                    "User": "[concat(parameters('domainFqdn'), '\\', parameters('clusterBootstrapAccount'))]",
                    "Restart": true,
                    "Options": "3",
                    "OUPath": "[parameters('ouPath')]"
                },
                "protectedSettings": {
                    "Password": "[parameters('clusterBootstrapAccountPassword')]"
                }
            },
            "dependsOn": [
                "vmLoop"
            ]
        },
        {
            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachineGroups",
            "name": "[parameters('FailoverClusterName')]",
            "apiVersion": "2017-03-01-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "SqlImageOffer": "[parameters('imageOffer')]",
                "SqlImageSku": "[parameters('imageSku')]",
                "WsfcDomainProfile": {
                    "DomainFqdn": "[parameters('domainFqdn')]",
                    "OuPath": "[parameters('ouPath')]",
                    "clusterBootstrapAccount": "[parameters('clusterBootstrapAccount')]",
                    "clusterOperatorAccount": "[parameters('clusterOperatorAccount')]",
                    "sqlServiceAccount": "[parameters('sqlServiceAccount')]",
                    "StorageAccountUrl": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('cloudWitnessName')), '2018-07-01').primaryEndpoints['blob']]",
                    "StorageAccountPrimaryKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('cloudWitnessName')), '2018-07-01').keys[0].value]"
                }
            },
            "dependsOn": [
                "domainJoinLoop"
            ]
        },
        {
            "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
            "name": "[concat(parameters('vmName'), copyindex(parameters('instanceIndex')))]",
            "apiVersion": "2017-03-01-preview",
            "location": "[resourceGroup().location]",
            "copy": {
                "count": "[parameters('instanceCount')]",
                "name": "sqlVmLoop"
            },
            "properties": {
                "virtualMachineResourceId": "[resourceId(resourceGroup().name, 'Microsoft.Compute/virtualMachines', concat(parameters('vmName'), copyindex(parameters('instanceIndex'))))]",
                "sqlServerLicenseType": "[parameters('sqlServerLicenseType')]",
                "sqlVirtualMachineGroupResourceId": "[resourceId(resourceGroup().name, 'Microsoft.SqlVirtualMachine/SqlVirtualMachineGroups', parameters('FailoverClusterName'))]",
                "wsfcDomainCredentials": {
                    "clusterBootstrapAccountPassword": "[parameters('clusterBootstrapAccountPassword')]",
                    "clusterOperatorAccountPassword": "[parameters('clusterOperatorAccountPassword')]",
                    "sqlServiceAccountPassword": "[parameters('sqlServiceAccountPassword')]"
                },
                "serverConfigurationsManagementSettings": {
                    "sqlConnectivityUpdateSettings": {
                        "connectivityType": "[parameters('sqlConnectivityType')]",
                        "port": "[parameters('sqlPort')]",
                        "sqlAuthUpdateUserName": "[parameters('sqlAuthUpdateUserName')]",
                        "sqlAuthUpdatePassword": "[parameters('sqlAuthUpdatePassword')]"
                    },
                    "sqlWorkloadTypeUpdateSettings": {
                        "sqlWorkloadType": "[parameters('sqlWorkloadType')]"
                    },
                    "sqlStorageUpdateSettings": {
                        "diskCount": "[length(parameters('dataDiskObject'))]",
                        "diskConfigurationType": "New",
                        "startingDeviceId": 2
                    },
                    "additionalFeaturesServerConfigurations": {
                        "isRServicesEnabled": false
                    }
                }
            },
            "dependsOn": [
                "[resourceId(resourceGroup().name, 'Microsoft.SqlVirtualMachine/SqlVirtualMachineGroups', parameters('FailoverClusterName'))]"
            ]
        }
    ]
}